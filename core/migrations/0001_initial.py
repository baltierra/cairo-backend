# Generated by Django 5.2 on 2025-09-04 03:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('event_date', models.DateField()),
                ('event_description', models.TextField(validators=[django.core.validators.MaxLengthValidator(10000)])),
                ('significance', models.CharField(blank=True, choices=[('LOCAL', 'Local'), ('REGIONAL', 'Regional'), ('NATIONAL', 'National'), ('GLOBAL', 'Global')], max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-event_date', 'event_name'],
            },
        ),
        migrations.CreateModel(
            name='EventPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=100)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.historicevent')),
            ],
            options={
                'ordering': ['event_id', 'person_id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('dob', models.DateField(blank=True, null=True)),
                ('brief', models.CharField(blank=True, max_length=250)),
                ('biography', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(10000)])),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('events', models.ManyToManyField(blank=True, related_name='people', through='core.EventPerson', to='core.historicevent')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='eventperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.historicperson'),
        ),
        migrations.CreateModel(
            name='HistoricPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=50)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('brief', models.CharField(blank=True, max_length=250)),
                ('history', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(10000)])),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['place_name'],
                'indexes': [models.Index(fields=['place_name'], name='core_histor_place_n_1473e1_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('date_start__isnull', True), ('date_end__isnull', True), ('date_end__gte', models.F('date_start')), _connector='OR'), name='place_valid_dates')],
            },
        ),
        migrations.AddField(
            model_name='historicevent',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='core.historicplace'),
        ),
        migrations.CreateModel(
            name='PersonPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('association_date', models.DateField(blank=True, null=True)),
                ('association_type', models.CharField(blank=True, max_length=50)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.historicperson')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.historicplace')),
            ],
            options={
                'ordering': ['-association_date', 'person_id'],
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photos/%Y/%m/')),
                ('file_name', models.CharField(blank=True, editable=False, max_length=255)),
                ('file_path', models.CharField(blank=True, editable=False, max_length=500)),
                ('file_type', models.CharField(blank=True, choices=[('png', 'png'), ('jpg', 'jpg'), ('jpeg', 'jpeg')], editable=False, max_length=10)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('file_size', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-upload_date'],
                'indexes': [models.Index(fields=['file_name'], name='core_photo_file_na_bdb6c0_idx')],
            },
        ),
        migrations.AddField(
            model_name='historicperson',
            name='profile_photo',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile_of', to='core.photo'),
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_order', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.historicevent')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.photo')),
            ],
            options={
                'ordering': ['event_id', 'photo_order'],
            },
        ),
        migrations.CreateModel(
            name='PlacePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_order', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.photo')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.historicplace')),
            ],
            options={
                'ordering': ['place_id', 'photo_order'],
            },
        ),
        migrations.AddConstraint(
            model_name='eventperson',
            constraint=models.UniqueConstraint(fields=('event', 'person'), name='uniq_event_person'),
        ),
        migrations.AddIndex(
            model_name='historicevent',
            index=models.Index(fields=['event_date'], name='core_histor_event_d_45dab2_idx'),
        ),
        migrations.AddConstraint(
            model_name='personplace',
            constraint=models.UniqueConstraint(fields=('person', 'place', 'association_date'), name='uniq_person_place_date'),
        ),
        migrations.AddIndex(
            model_name='historicperson',
            index=models.Index(fields=['last_name', 'first_name'], name='core_histor_last_na_7de6bd_idx'),
        ),
        migrations.AddConstraint(
            model_name='eventphoto',
            constraint=models.UniqueConstraint(fields=('event', 'photo'), name='uniq_event_photo'),
        ),
        migrations.AddConstraint(
            model_name='eventphoto',
            constraint=models.UniqueConstraint(fields=('event', 'photo_order'), name='uniq_event_photo_order'),
        ),
        migrations.AddConstraint(
            model_name='placephoto',
            constraint=models.UniqueConstraint(fields=('place', 'photo'), name='uniq_place_photo'),
        ),
        migrations.AddConstraint(
            model_name='placephoto',
            constraint=models.UniqueConstraint(fields=('place', 'photo_order'), name='uniq_place_photo_order'),
        ),
    ]
